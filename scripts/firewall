#!/bin/sh

! [ "$EUID" = "0" ] && echo "This script requires root privileges" && exit

# Use the cloudflare dns resolver
grep "^nameserver 1.1.1.1" /etc/resolv.conf &>/dev/null
[ $? = 1 ] && echo "nameserver 1.1.1.1" > /etc/resolv.conf
grep "^nohook resolv.conf" /etc/dhcpcd.conf &>/dev/null
[ $? = 1 ] && echo "nohook resolv.conf" >> /etc/dhcpcd.conf

# Clean up the chains
iptables -F
iptables -X

# Default rules
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

# Create the necessary chains
iptables -N TCP
iptables -N UDP

# Allow established connections, loopback and LAN
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT

# Drop invalid packets
iptables -A INPUT -m conntrack --ctstate INVALID -j DROP

# Allow ICMP packets and LAN connections
iptables -A INPUT -p icmp -j ACCEPT
iptables -A INPUT -s 192.168.0.0/24 -j ACCEPT

# Attach the chains
iptables -A INPUT -p udp -m conntrack --ctstate NEW -j UDP
iptables -A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP

# Stuff that falls through gets rejected
iptables -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset
iptables -A INPUT -j REJECT --reject-with icmp-proto-unreachable

# HTTP/S
iptables -A TCP -p tcp --dport 80 -j ACCEPT
iptables -A TCP -p tcp --dport 443 -j ACCEPT
