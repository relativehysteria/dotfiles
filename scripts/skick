#!/usr/bin/env python

from concurrent.futures import ThreadPoolExecutor
from bs4 import BeautifulSoup
from requests import get


ARTISTS = [
    "3768296-rum-jungle",
    "590705-bon-iver",
    "4126816-wolf-alice",
    "9329894-queens-pleasure",
    "5806184-jeff-rosenstock",
    "8959074-tamino",
    "605621-tom-rosenthal",
    "120445-vypsana-fixa",
    "443396-bloc-party",
    "10098289-ichiko-aoba",
    "383629-balthazar",
    "939825-have-a-nice-life",
    "3808746-giles-corey",
    "496602-sigur-ros",
    "1167694-shakey-graves",
    "590465-olafur-arnalds",
    "70202-mogwai",
    "715080-warpaint",
    "426716-dawn-landes",
    "542593-jose-gonzalez",
    "118509-sufjan-stevens",
    "592267-fleet-foxes",
    "113970-iron-and-wine",
]


def scrape(artist_path):
    # Get the stuff
    r = get(f"https://www.songkick.com/artists/{artist_path}")

    # If we get blocked or something, idc
    if not r.ok:
        return

    # Find the header and check whether the band is touring
    soup = BeautifulSoup(r.text, features="lxml")
    header = soup.find("h2", class_="header-text")

    # Modify the dictionary below our feet because we're psycho
    if "find" in header.text.lower():
        return

    # Find the closest gig details and save them
    name      = soup.find("h1", class_="h0").text.strip()
    primary   = soup.find("strong", class_="primary-detail").text
    secondary = soup.find("p",      class_="secondary-detail").text
    time      = soup.find('div',    class_="local-upcoming-events-list").li.attrs["title"]
    return f"{name}\n > {primary}, {secondary} \n > {time}\n"

pool = ThreadPoolExecutor(max_workers=len(ARTISTS))

for artist in pool.map(scrape, ARTISTS):
    if artist is None:
        continue
    print(artist)
