diff --git a/alacritty/src/config/ui_config.rs b/alacritty/src/config/ui_config.rs
index b44bda0d..66bc6478 100644
--- a/alacritty/src/config/ui_config.rs
+++ b/alacritty/src/config/ui_config.rs
@@ -158,6 +158,11 @@ impl UiConfig {
         self.window.opacity.as_f32()
     }
 
+    #[inline]
+    pub fn window_unfocused_opacity(&self) -> f32 {
+        self.window.unfocused_opacity.as_f32()
+    }
+
     #[inline]
     pub fn key_bindings(&self) -> &[KeyBinding] {
         &self.keyboard.bindings.0
diff --git a/alacritty/src/config/window.rs b/alacritty/src/config/window.rs
index 358bb76d..ccc8c13f 100644
--- a/alacritty/src/config/window.rs
+++ b/alacritty/src/config/window.rs
@@ -41,9 +41,12 @@ pub struct WindowConfig {
     #[config(flatten)]
     pub identity: Identity,
 
-    /// Background opacity from 0.0 to 1.0.
+    /// Background opacity from 0.0 to 1.0 (when the window is IN focus).
     pub opacity: Percentage,
 
+    /// Background opacity from 0.0 to 1.0 (when the window is OUT of focus).
+    pub unfocused_opacity: Percentage,
+
     /// Request blur behind the window.
     pub blur: bool,
 
@@ -80,6 +83,7 @@ impl Default for WindowConfig {
             decorations: Default::default(),
             startup_mode: Default::default(),
             dynamic_padding: Default::default(),
+            unfocused_opacity: Default::default(),
             resize_increments: Default::default(),
             decorations_theme_variant: Default::default(),
             option_as_alt: Default::default(),
diff --git a/alacritty/src/display/mod.rs b/alacritty/src/display/mod.rs
index 4211da5f..506d8b6e 100644
--- a/alacritty/src/display/mod.rs
+++ b/alacritty/src/display/mod.rs
@@ -765,6 +765,13 @@ impl Display {
         }
         terminal.reset_damage();
 
+        // Track the opacity for this draw
+        let win_opacity = if terminal.is_focused {
+            config.window_opacity()
+        } else {
+            config.window_unfocused_opacity()
+        };
+
         // Drop terminal as early as possible to free lock.
         drop(terminal);
 
@@ -789,7 +796,7 @@ impl Display {
         // Make sure this window's OpenGL context is active.
         self.make_current();
 
-        self.renderer.clear(background_color, config.window_opacity());
+        self.renderer.clear(background_color, win_opacity);
         let mut lines = RenderLines::new();
 
         // Optimize loop hint comparator.
diff --git a/alacritty/src/display/window.rs b/alacritty/src/display/window.rs
index 1f1e7402..864273a2 100644
--- a/alacritty/src/display/window.rs
+++ b/alacritty/src/display/window.rs
@@ -183,7 +183,8 @@ impl Window {
         window.set_ime_purpose(ImePurpose::Terminal);
 
         // Set initial transparency hint.
-        window.set_transparent(config.window_opacity() < 1.);
+        window.set_transparent(config.window_opacity() < 1. ||
+                               config.window_unfocused_opacity() < 1.);
 
         #[cfg(target_os = "macos")]
         use_srgb_color_space(&window);
diff --git a/alacritty/src/window_context.rs b/alacritty/src/window_context.rs
index cfc3cd96..364f5694 100644
--- a/alacritty/src/window_context.rs
+++ b/alacritty/src/window_context.rs
@@ -307,7 +307,8 @@ impl WindowContext {
             self.display.window.set_title(self.config.window.identity.title.clone());
         }
 
-        let opaque = self.config.window_opacity() >= 1.;
+        let opaque = self.config.window_opacity() >= 1. ||
+            self.config.window_unfocused_opacity() >= 1.;
 
         // Disable shadows for transparent windows on macOS.
         #[cfg(target_os = "macos")]
